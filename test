sudo apt update
sudo apt install -y libreoffice libreoffice-calc libreoffice-common \
                    python3-venv
# 日本語表示用フォント（推奨）
sudo apt install -y fonts-noto-cjk fonts-ipafont-gothic fonts-ipafont-mincho \
                    fonts-noto-color-emoji

# サンプル: uploads/売上.xlsx を用意してから
libreoffice --headless --convert-to pdf --outdir ./out ./uploads/売上.xlsx
# → ./out/売上.pdf ができればOK


# app.py
from flask import Flask, send_file, abort
import subprocess, tempfile, shutil
from pathlib import Path

app = Flask(__name__)
UPLOAD_DIR = Path("uploads")
OUT_DIR = Path("out")
OUT_DIR.mkdir(exist_ok=True)

def convert_xlsx_to_pdf(xls_path: Path, pdf_path: Path):
    if not xls_path.exists():
        abort(404, "Excelファイルが見つかりません")

    # 既にPDFがあり、元より新しければ再変換しない
    if pdf_path.exists() and pdf_path.stat().st_mtime >= xls_path.stat().st_mtime:
        return

    tmp_profile = Path(tempfile.mkdtemp(prefix="lo-profile-"))
    try:
        # -env:UserInstallation を使うと並列時のロック競合を避けられます
        cmd = [
            "libreoffice",
            "--headless",
            f"-env:UserInstallation=file://{tmp_profile.as_posix()}",
            "--convert-to", "pdf",  # 書式をより厳密にしたいなら "pdf:calc_pdf_Export"
            "--outdir", str(OUT_DIR),
            str(xls_path)
        ]
        subprocess.run(cmd, check=True, timeout=120)
        if not pdf_path.exists():
            abort(500, "PDF 生成に失敗しました")
    finally:
        shutil.rmtree(tmp_profile, ignore_errors=True)

@app.route("/excel/<path:filename>")
def excel_to_pdf(filename):
    xls_path = UPLOAD_DIR / filename
    pdf_path = OUT_DIR / (Path(filename).stem + ".pdf")
    convert_xlsx_to_pdf(xls_path, pdf_path)
    return send_file(pdf_path, mimetype="application/pdf")

if __name__ == "__main__":
    app.run(debug=True)
