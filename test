from sqlalchemy import func

取得処理
delete_names = {"test1", "test2"}

# Bの削除対象ではない行（残るB）の件数をAごとに集計
remaining_b_subq = (
    session.query(B.a_no.label("a_no"), func.count(B.id).label("remaining_count"))
    .filter(~B.set_point_name.in_(delete_names))  # 削除しないB
    .group_by(B.a_no)
    .subquery()
)

# Aに対してJOINし、Bが残らないものだけに絞る
a_candidates = (
    session.query(A)
    .outerjoin(remaining_b_subq, A.no == remaining_b_subq.c.a_no)
    .filter(remaining_b_subq.c.remaining_count == None)  # Bが残らないA
    .join(B, A.no == B.a_no)
    .filter(B.set_point_name.in_(delete_names))  # Aに削除対象Bが紐づいている
    .distinct()
    .all()
)


削除処理
# 確認後に削除対象AのNoリストを作る
a_nos_to_delete = [a.no for a in a_candidates]

# Bの削除
session.query(B).filter(B.set_point_name.in_(delete_names)).delete(synchronize_session=False)

# Aの削除
session.query(A).filter(A.no.in_(a_nos_to_delete)).delete(synchronize_session=False)

session.commit()
